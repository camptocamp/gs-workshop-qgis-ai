volumes:
  elasticsearch_data:
  geonetwork_data:
  postgresql_data:

services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8080:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geonetwork
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.15
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -s -f http://localhost:9200/_cat/health >/dev/null || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'

  geonetwork:
    image: geonetwork:4.4.5
    environment:
      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: database
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: geonetwork
      GEONETWORK_DB_USERNAME: geonetwork
      GEONETWORK_DB_PASSWORD: geonetwork
      DATA_DIR: /catalogue-data
      VIRTUAL_HOST: localhost

      JAVA_OPTS: >
        -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
        -Dgeonetwork.resources.dir=/catalogue-data/data/resources
        -Dgeonetwork.data.dir=/catalogue-data/data
        -Dgeonetwork.codeList.dir=/catalogue-data/config/codelist
        -Dgeonetwork.schema.dir=/catalogue-data/config/schema_plugins
        -Dgeonetwork.config.dir=/catalogue-data/config
        -Dgeonetwork.indexConfig.dir=/catalogue-data/config/index
        -Des.host=elasticsearch
        -Des.protocol=http
        -Des.port=9200
        -Des.url=http://elasticsearch:9200
    depends_on:
      database:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      traefik:
        condition: service_started
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -s -f http://localhost:8080/geonetwork/srv/eng/catalog.search >/dev/null || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 10
    volumes:
      - geonetwork_data:/catalogue-data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.geonetwork.rule=Host(`localhost`) && PathPrefix(`/geonetwork`)"
      - "traefik.http.routers.geonetwork.entrypoints=web"
      - "traefik.http.services.geonetwork.loadbalancer.server.port=8080"
